name: Taboor CI

on:
  push:
    branches: [ main ]

jobs:
  validate-structure:
    name: Validate Project Structure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate critical files
      run: |
        echo "=== PROJECT STRUCTURE VALIDATION ==="
        
        # Critical files that must exist
        critical_files=(
          "frontend/index.html"
          "frontend/main.js" 
          "frontend/styles.css"
          "backend/Nootbook.ipynb"
          "backend/queue_data.csv"
          "backend/server.js"
          "database/taboor.db"
          "database/schema.sql"
        )
        
        all_files_exist=true
        for file in "${critical_files[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists"
          else
            echo "‚ùå MISSING: $file"
            all_files_exist=false
          fi
        done
        
        if [ "$all_files_exist" = false ]; then
          echo "üö® Critical files missing - failing CI"
          exit 1
        fi
        
        echo "‚úÖ All critical files present"

      validate-syntax:
    name: Validate Code Syntax
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Validate Python syntax
      run: |
        echo "=== PYTHON SYNTAX VALIDATION ==="
        
        # Find all Python files
        python_files=$(find . -name "*.py" -type f)
        
        if [ -z "$python_files" ]; then
          echo "‚ÑπÔ∏è No Python files found"
          exit 0
        fi
        
        echo "Checking Python files:"
        echo "$python_files"
        
        # Check each Python file but CONTINUE to find ALL errors
        error_found=false
        for file in $python_files; do
          echo "Checking: $file"
          if ! python -m py_compile "$file"; then
            echo "‚ùå SYNTAX ERROR in: $file"
            error_found=true
          else
            echo "‚úÖ $file - Syntax OK"
          fi
        done
        
        # Only exit after checking ALL files
        if [ "$error_found" = true ]; then
          echo "üö® Python syntax errors found - failing CI"
          exit 1
        fi
        
        echo "‚úÖ All Python files have valid syntax"

    - name: Validate JavaScript syntax
      run: |
        echo "=== JAVASCRIPT SYNTAX VALIDATION ==="
        
        # Find all JavaScript files
        js_files=$(find . -name "*.js" -type f)
        
        if [ -z "$js_files" ]; then
          echo "‚ÑπÔ∏è No JavaScript files found"
          exit 0
        fi
        
        echo "Checking JavaScript files:"
        echo "$js_files"
        
        # Check each JavaScript file but CONTINUE to find ALL errors
        error_found=false
        for file in $js_files; do
          echo "Checking: $file"
          if ! node -c "$file"; then
            echo "‚ùå SYNTAX ERROR in: $file"
            error_found=true
          else
            echo "‚úÖ $file - Syntax OK"
          fi
        done
        
        # Only exit after checking ALL files
        if [ "$error_found" = true ]; then
          echo "üö® JavaScript syntax errors found - failing CI"
          exit 1
        fi
        
        echo "‚úÖ All JavaScript files have valid syntax"